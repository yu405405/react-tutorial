{"ast":null,"code":"var _jsxFileName = \"/Users/fujinoyu/practice/react-tutorial/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i] //このhandleClick(i)はどこから来ている？\n      ,\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    // これは何をしている？\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    } // squares配列のi番目に'X' or 'O'を代入する（textContentは不要）\n\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      // これは何をしている？\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber]; // ここでは何をしているか？\n\n    const winner = calculateWinner(current.squares); // ここでは何をしているか？\n\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner' + winner;\n    } else {\n      status = 'Next player' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i]; // squares[a]でnullでないことを確認。\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      // 'X' or 'O' の文字列をreturn\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 149,\n  columnNumber: 13\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","Game","constructor","state","history","Array","fill","stepNumber","xIsNext","handleClick","slice","current","length","calculateWinner","setState","concat","jumpTo","step","winner","moves","map","move","desc","status","lines","a","b","c","root","createRoot","document","getElementById"],"sources":["/Users/fujinoyu/practice/react-tutorial/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css'\n\nfunction Square(props) {\n    return (\n        <button className='square' onClick={props.onClick}>\n            {props.value}\n        </button>\n    )\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        return <Square\n                    value={this.props.squares[i]}\n                    //このhandleClick(i)はどこから来ている？\n                    onClick={() => this.props.onClick(i)}\n                />;\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state =  {\n            history: [{\n                squares: Array(9).fill(null)\n            }],\n            stepNumber: 0,\n            xIsNext: true\n        }\n    }\n\n    handleClick(i) {\n        // これは何をしている？\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice()\n        if(calculateWinner(squares) || squares[i]) {\n            return\n        }\n        // squares配列のi番目に'X' or 'O'を代入する（textContentは不要）\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            // これは何をしている？\n            history: history.concat([{\n                squares: squares,\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext\n        })\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n        })\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        // ここでは何をしているか？\n        const winner = calculateWinner(current.squares);\n        // ここでは何をしているか？\n        const moves = history.map((step, move) => {\n            const desc = move ? 'Go to move #' + move : 'Go to game start';\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            )\n        })\n\n        let status;\n        if(winner) {\n            status = 'Winner' + winner\n        } else {\n            status = 'Next player' + (this.state.xIsNext ? 'X' : 'O')\n        }\n\n        return (\n            <div className='game'>\n                <div className='game-board'>\n                    <Board\n                        squares={current.squares}\n                        onClick={(i) => this.handleClick(i)}\n                    />\n                </div>\n                <div className='game-info'>\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n\n    for(let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i]\n        // squares[a]でnullでないことを確認。\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            // 'X' or 'O' の文字列をreturn\n            return squares[a]\n        }\n    }\n    return null\n}\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(<Game />)"],"mappings":"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"},"metadata":{},"sourceType":"module"}